(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{534:function(t,v,_){t.exports=_.p+"assets/img/20230430230650.9734a6e4.png"},535:function(t,v,_){t.exports=_.p+"assets/img/20230430232820.02b766d2.png"},536:function(t,v,_){t.exports=_.p+"assets/img/20230430234506.efd9ae96.png"},648:function(t,v,_){"use strict";_.r(v);var r=_(7),a=Object(r.a)({},(function(){var t=this,v=t.$createElement,r=t._self._c||v;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"树的概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树的概念"}},[t._v("#")]),t._v(" 树的概念")]),t._v(" "),r("p",[t._v("树是一种"),r("strong",[t._v("非线性")]),t._v("的数据结构，用它能很好地描述有"),r("strong",[t._v("分支")]),t._v("和"),r("strong",[t._v("层次")]),t._v("的数据集合。")]),t._v(" "),r("p",[t._v("一棵树由n(n>=0)个节点组成的有限集合以及该集合上定义的一种节点关系。")]),t._v(" "),r("img",{attrs:{src:_(534)}}),t._v(" "),r("p",[t._v("树的节点：集合中每个元素称为树的节点。")]),t._v(" "),r("p",[t._v("根节点（树根）：一棵树只有一个根节点，位于最顶层（第一层）")]),t._v(" "),r("p",[t._v("子树：除根节点外，其余节点能分成m(m>=0)个互不相交的有限集合。这些子集称为这棵树的子树。树是递归定义的。")]),t._v(" "),r("p",[t._v("节点的度：节点的子树数目。")]),t._v(" "),r("p",[t._v("树的度：树中各节点的度的最大值。")]),t._v(" "),r("p",[t._v("树的广度（宽度）：节点的度和树的度共同体现了树的宽度。")]),t._v(" "),r("p",[t._v("树的深度（高度）：树的层次，有几层就有多高。根节点的层次为1.")]),t._v(" "),r("p",[t._v("内部节点：根以外的分支节点。")]),t._v(" "),r("p",[t._v("叶节点（终端节点）：度为0的节点。")]),t._v(" "),r("p",[t._v("分支节点（非终端节点）：度非0的节点。")]),t._v(" "),r("p",[t._v("父节点、子节点（孩子节点）、兄弟节点、祖先节点、子孙节点")]),t._v(" "),r("p",[t._v("前驱：根节点没有前驱，除根节点外，其余节点有唯一的前驱。")]),t._v(" "),r("p",[t._v("后继：叶节点没有后继，除叶节点外，其余节点有一个或多个后继。")]),t._v(" "),r("p",[t._v("边（树枝）：连接两个节点的线段。n个节点有n-1条边。")]),t._v(" "),r("p",[t._v("路径：任意两个不同的节点，如果从一个节点出发，自上而下沿树枝能到达另一节点，称它们之间存在一条路径。路径的长度等于路径上节点个数减1。")]),t._v(" "),r("h2",{attrs:{id:"树的分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树的分类"}},[t._v("#")]),t._v(" 树的分类")]),t._v(" "),r("p",[t._v("根据树节点的有序性，可以将树结构分为两类：查找树和无序树。")]),t._v(" "),r("p",[t._v("根据树分支的数量限制，可以将树结构分为两类：多叉树和二叉树。")]),t._v(" "),r("h3",{attrs:{id:"查找树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查找树"}},[t._v("#")]),t._v(" 查找树")]),t._v(" "),r("p",[t._v("查找树：也可以叫搜索树，任意一个节点所包含的键值，大于等于左孩子的键值，小于等于右孩子的键值。")]),t._v(" "),r("h3",{attrs:{id:"无序树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#无序树"}},[t._v("#")]),t._v(" 无序树")]),t._v(" "),r("p",[t._v("无序树：节点的键值无特定大小关系。")]),t._v(" "),r("h3",{attrs:{id:"多叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多叉树"}},[t._v("#")]),t._v(" 多叉树")]),t._v(" "),r("p",[t._v("在多叉树上每一个节点可以有两个或两个以上的子节点。")]),t._v(" "),r("h3",{attrs:{id:"二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),r("p",[t._v("二叉树（binary tree，BT），是一种特殊的树型结构。它的度数为2，即每个节点最多有两个子节点。")]),t._v(" "),r("img",{attrs:{src:_(535)}}),t._v(" "),r("h4",{attrs:{id:"二叉树的性质"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的性质"}},[t._v("#")]),t._v(" 二叉树的性质")]),t._v(" "),r("p",[t._v("在二叉树的第 "),r("code",[t._v("i")]),t._v(" 层最多有 "),r("code",[t._v("2的i减1次方")]),t._v(" 个节点。")]),t._v(" "),r("p",[t._v("深度为 "),r("code",[t._v("k")]),t._v(" 的二叉树至多有 "),r("code",[t._v("2的k次方减1")]),t._v(" 个节点。")]),t._v(" "),r("h4",{attrs:{id:"二叉树的遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的遍历"}},[t._v("#")]),t._v(" 二叉树的遍历")]),t._v(" "),r("ul",[r("li",[t._v("先序遍历：中左右，根节点->左子树->右子树。")]),t._v(" "),r("li",[t._v("中序遍历：左中右，左子树->根节点->右子树。")]),t._v(" "),r("li",[t._v("后序遍历：左右中，左子树->右子树->根节点。")]),t._v(" "),r("li",[t._v("层级遍历：先上后下，先左后右。")])]),t._v(" "),r("h4",{attrs:{id:"满二叉树和完全二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#满二叉树和完全二叉树"}},[t._v("#")]),t._v(" 满二叉树和完全二叉树")]),t._v(" "),r("p",[t._v("满二叉树：深度为 "),r("code",[t._v("k")]),t._v(" 且有 "),r("code",[t._v("2的k次方减1")]),t._v(" 个节点的树。除叶节点外的所有节点均有两个子节点。节点数达到最大值。所有叶节点必须在同一层上。")]),t._v(" "),r("p",[t._v("完全二叉树：深度为k，除第k层外，其它各层（1~k-1）的节点数都达到最大值，第k层所有节点连续集中在最左边。除最后一层外，每一层上的节点数均达到最大值；在最后一层上只缺少右边的若干节点。")]),t._v(" "),r("img",{attrs:{src:_(536)}}),t._v(" "),r("h4",{attrs:{id:"avl-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#avl-tree"}},[t._v("#")]),t._v(" AVL Tree")]),t._v(" "),r("p",[t._v("AVL树，自平衡二叉查找树，有两个特点：")]),t._v(" "),r("ol",[r("li",[t._v("左子树和右子树都是AVL树")]),t._v(" "),r("li",[t._v("左子树和右子树的高度差不能超过 1")])]),t._v(" "),r("h4",{attrs:{id:"r-b-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#r-b-tree"}},[t._v("#")]),t._v(" R-B Tree")]),t._v(" "),r("h2",{attrs:{id:"森林"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#森林"}},[t._v("#")]),t._v(" 森林")]),t._v(" "),r("p",[t._v("森林是m(m>=0)棵互不相交的树的集合。")]),t._v(" "),r("h2",{attrs:{id:"相关链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相关链接"}},[t._v("#")]),t._v(" 相关链接")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.bilibili.com/video/BV1Wq4y1D7tZ",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据结构-树"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.bilibili.com/video/BV1VP4y1p7Ah",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据结构-二叉树（上）"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.bilibili.com/video/BV12L411b7Y2",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据结构-二叉树（下）"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/weixin_45505313/article/details/101065824",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据结构-树的分类"),r("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=a.exports}}]);